#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: N1 Single_Plus Version

on:
  repository_dispatch:
    types: [single]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 04 * * 3
    
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  N1_VER: plus
  CONFIG_FILE: plus.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
  RELEASE: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d%H)" >> $GITHUB_ENV
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        
    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH        
     
    - name: SSH connection to Actions SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: Compile Firmware
      id: compile
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        cp .config ${UPLOAD}/${N1_VER}.config
        cd bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs.tar.gz
        count=` find -name '*.xz' | wc -l `
        if [ $count -gt 0 ] ; then
            cp -r *.xz ${UPLOAD}/
        fi
        echo "::set-output name=status::success"       

    - name: Package OpenWrt with flippy script
      uses: yogasmart/package-flippy-openwrt@main
      with:
        types: s905d
        openwrt-version: R21.6.22
        whoami: doctor
        out: ${{ env.UPLOAD }}
        openwrt-path: $GITHUB_WORKSPACE/openwrt/bin/targets/*/*
        sub-name: ${{env.N1_VER}}
   
    - name: Create release
      if: steps.compile.outputs.status == 'success' && env.RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} / N1-Openwrt-${{ env.N1_VER }} | 编译
        allowUpdates: true
        tag: ${{ env.tag_name }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN }}
        body: |
          当前使用版本:（编译前的最后一次源码更新记录）

          ${{ env.useVersionInfo }}
        artifacts:  ${{ env.UPLOAD }}/*
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
